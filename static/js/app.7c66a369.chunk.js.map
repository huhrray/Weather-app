{"version":3,"sources":["Loading.js","Weather.js","App.js"],"names":["styles","StyleSheet","create","container","flex","justifyContent","paddingHorizontal","paddingVertical","backgroundColor","text","color","fontSize","yellowView","blueView","Loading","props","View","style","StatusBar","barStyle","Text","weatherOptions","Thunderstorm","iconName","gradient","title","subtitle","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Haze","Mist","Dust","Weather","temp","condition","LinearGradient","colors","halfContainer","MaterialCommunityIcons","size","name","textContainer","subTitle","PropTypes","number","isRequired","oneOf","alignItems","fontWeight","marginBottom","textAlign","API_KEY","App","state","isLoading","getWeather","latitude","longitude","a","async","axios","get","data","main","weather","setState","getLocation","Location","coords","Alert","alert","this","Math","round","React","Component"],"mappings":"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","file":"static/js/app.7c66a369.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, StatusBar } from 'react-native';\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar barStyle=\"dark-content\" />\r\n            <Text style={styles.text}>How's the weather today?</Text> \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 100,\r\n        backgroundColor: \"#FDF6AA\"\r\n    },\r\n    \r\n    text: {\r\n        color: \"#2c2c2c\",\r\n        fontSize: 30\r\n    },\r\n    \r\n    yellowView:{\r\n        flex:1,\r\n        backgroundColor:\"yellow\"\r\n    },\r\n\r\n    blueView:{\r\n        flex:3,\r\n        backgroundColor:\"blue\"\r\n    }\r\n})\r\nexport default Loading;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Text, View, StyleSheet, StatusBar } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport {LinearGradient} from 'expo-linear-gradient'\r\n\r\nconst weatherOptions = {\r\n    \r\n    Thunderstorm: {\r\n        iconName: \"weather-lightning\",\r\n        gradient: [\"#373B44\", \"#4286f4\"],\r\n        title: \"Thunderstorm in the house\",\r\n        subtitle: \"Good weather to listen to the song'Thunder'\"\r\n    },\r\n    Drizzle: {\r\n        iconName: \"weather-hail\",\r\n        gradient: [\"#89F7FE\", \"#66A6FF\"],\r\n        title: \"Drizzle\",\r\n        subtitle: \"Annoying kind of rain\"\r\n    },\r\n    Rain: {\r\n        iconName: \"weather-rainy\",\r\n        gradient: [\"#00C6FB\", \"#005BEA\"],\r\n        title: \"It's raining man, hallelujah!\",\r\n        subtitle: \"Don't forget your umbrella\"\r\n\r\n    },\r\n    Snow: {\r\n        iconName: \"weather-snowy\",\r\n        gradient: [\"#7DE2FC\", \"#B9B6E5\"],\r\n        title: \"Let it snow\",\r\n        subtitle: \"Do you wanna build a snowman~\"\r\n    },\r\n    Atmosphere: {\r\n        iconName: \"weather-hail\",\r\n        gradient: [\"#89F7FE\", \"#66A6FF\"],\r\n        title: \"Mist\",\r\n        subtitle: \"Let's moisturize your skin!\"\r\n    },\r\n    Clear: {\r\n        iconName: \"weather-sunny\",\r\n        gradient: [\"#FF7300\", \"#FEF253\"],\r\n        title: \"Sunny and lovely\",\r\n        subtitle: \"Should go out to get vitamin D\"\r\n    },\r\n    Clouds: {\r\n        iconName: \"weather-cloudy\",\r\n        gradient: [\"#D7D2CC\", \"#304352\"],\r\n        title: \"Clouds\",\r\n        subtitle: \"Gloomy gloomy cloudy day\"\r\n    },\r\n    Haze: {\r\n        iconName: \"weather-hail\",\r\n        gradient: [\"#4DA0B0\", \"#D39D38\"],\r\n        title: \"Haze\",\r\n        subtitle: \"Open your eyes big enough to see properly!\"\r\n    },\r\n    Mist: {\r\n        iconName: \"weather-hail\",\r\n        gradient: [\"#4DA0B0\", \"#D39D38\"],\r\n        title: \"Mist\",\r\n        subtitle: \"Let's moisturize your skin!\"\r\n    },\r\n    Dust: {\r\n        iconName: \"weather-hail\",\r\n        gradient: [\"#4DA0B0\", \"#D39D38\"],\r\n        title: \"Dust\",\r\n        subtitle: \"It's hard to breathe!\"\r\n    }\r\n  };\r\n\r\n\r\nexport default function Weather({temp, condition}) {\r\n    return (\r\n\r\n        <LinearGradient\r\n        colors={weatherOptions[condition].gradient}\r\n        style={styles.container}\r\n        >\r\n            <StatusBar barStyle=\"light-conent\" />\r\n            <View style={styles.halfContainer}>\r\n                <MaterialCommunityIcons \r\n                    color=\"white\" \r\n                    size={96} \r\n                    name={weatherOptions[condition].iconName} />\r\n                <Text style={styles.temp}>{temp}Ëš</Text>\r\n            </View>\r\n            <View style={styles.textContainer}>\r\n                    <Text style={styles.title}>{weatherOptions[condition].title}</Text>\r\n                    <Text style={styles.subTitle}>{weatherOptions[condition].subtitle}</Text>\r\n            </View>\r\n        </LinearGradient>\r\n    );\r\n}\r\n\r\nWeather.PropTypes = {\r\n    temp:PropTypes.number.isRequired,\r\n    condition: PropTypes.oneOf([\r\n      \"Thunderstorm\",\r\n      \"Drizzle\",\r\n      \"Rain\",\r\n      \"Snow\",\r\n      \"Atmosphere\",\r\n      \"Clear\",\r\n      \"Clouds\",\r\n      \"Haze\",\r\n      \"Mist\",\r\n      \"Dust\"\r\n    ]).isRequired \r\n}\r\n\r\nconst styles =StyleSheet.create({\r\n    container: {\r\n        flex:1,\r\n    },\r\n\r\n    halfContainer:{\r\n        flex:1,\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\"\r\n    },\r\n\r\n    temp:{\r\n        fontSize:36,\r\n        color:\"white\"\r\n    },  \r\n    textContainer:{\r\n        paddingHorizontal:40,\r\n        alignItems:'flex-start',\r\n        justifyContent:\"center\",\r\n        flex:1\r\n \r\n    },\r\n\r\n    title:{\r\n        color:\"white\",\r\n        fontWeight:\"300\",\r\n        fontSize :44,\r\n        marginBottom:10,    \r\n        textAlign:\"left\"\r\n    },\r\n\r\n    subTitle:{\r\n        color:\"white\",\r\n        fontSize:24,\r\n        fontWeight:\"600\",\r\n        textAlign:\"left\"\r\n    }\r\n\r\n\r\n})","import React from 'react';\nimport Loading from './Loading';\nimport Weather from './Weather'\nimport * as Location from 'expo-location';\nimport { Alert } from 'react-native';\nimport axios from 'axios'\nconst API_KEY = \"b921c0f03d18df3be54d380babf2df68\"\nexport default class App extends React.Component {\n  state = {\n    isLoading: true\n  }\n\n  getWeather = async(latitude, longitude) => {\n    const {\n      data :{\n      main:{temp},\n      weather\n    }} = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\n      )\n      this.setState({\n        isLoading:false,\n        temp,\n        condition: weather[0].main })\n  }\n\n  getLocation = async() => {\n    try{\n      await Location.requestPermissionsAsync(); \n      const {\n        coords:{latitude, longitude}\n      } = await Location.getCurrentPositionAsync();\n      this.getWeather(latitude, longitude)\n    } catch(error){\n      Alert.alert(\"Can't find your location\",\"Please change your location permission setting\")\n    }\n  }\n  componentDidMount(){\n    this.getLocation();\n  }\n  render(){\n    const {isLoading, temp, condition} = this.state\n\n    return ( \n      isLoading? <Loading /> : <Weather temp={Math.round(temp)} condition={condition}/>\n    )\n  }\n  \n}\n"],"sourceRoot":""}